echo "    - VRViz-ROS .vrvizrc" | awk '{ gsub("VRViz-ROS",  "\033[1;33m&\033[0m"); print }' ;

function file_dir () { echo "$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )" ; }
function ws_dir () { echo `file_dir` | awk -F'/src' '{print $1}' ; }
export VRVIZ_ROS_GIT_DIR=`file_dir`
export VRVIZ_ROS_WS_DIR=`ws_dir`

#function vrvizrc () { gedit $VRVIZ_ROS_GIT_DIR/.vrvizrc ; }

export ROS_MASTER=localhost
export S_PORT=11411
export C_PORT=11311

export MQTT_BRIDGE_IP=localhost
export MQTT_BRIDGE_PORT=8883


function vrviz_server () {
  export PORT=${S_PORT}
  export ROS_MASTER_URI=http://${ROS_MASTER}:${PORT}
  #if [ "$1" = "q" ]; then
  #  echo "        - [Terminal connected to vrviz_server]";
  #else
  #  echo "Terminal connected to vrviz_server";
  #fi
  echo "Terminal connected to vrviz_server";
}
#vrviz_server "q"


function vrviz_client () {
  export PORT=${C_PORT}
  export ROS_MASTER_URI=http://${ROS_MASTER}:${PORT}
  echo "Terminal connected to vrviz_client"
}


function vrviz_remote () {
  export PORT=${MQTT_BRIDGE_PORT}
  export ROS_MASTER_URI=http://${MQTT_BRIDGE_IP}:${MQTT_BRIDGE_PORT}
  echo "Terminal connected to vrviz_remote"
}


function set_uri () {
  if [ -z ${1+x} ]; then
    vrviz_server;
  else
    if [ $1 = "1" ]; then vrviz_client;
    elif [ $1 = "2" ]; then vrviz_remote;
    else vrviz_server;
    fi ;
  fi ;
}

#function vbasic () { set_uri $1; roslaunch vrviz_ros basic_test_simulation.launch ; }
function vbasic () { vrviz_server; roslaunch vrviz_ros basic_test_simulation.launch ; }
#function vintense () { vrviz_server; roslaunch vrviz_ros intensive_test_simulation.launch ; }











