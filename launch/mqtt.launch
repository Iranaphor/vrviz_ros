<?xml version="1.0" ?>
<launch>
  <arg name="debug_level" default="debug"/>


  <!-- run communication manager & initialise channels -->
  <arg name="control_topic"    default="__dynamic_server" doc="control port for dynamic server"/>
  <arg name="mqtt_bridge_ip"   default="$(optenv MQTT_BRIDGE_IP localhost)" doc="ip of bridge"/>
  <arg name="mqtt_bridge_port" default="$(optenv MQTT_BRIDGE_PORT 8883)" doc="port of bridge (set in .runcom)"/>
  <arg name="mqtt_config_file" default="$(find vrviz_ros)/config/mqtt_dynamic_bridge_server_config.yaml"/>

  <node pkg="mqtt_bridge" name="mqtt_bridge" type="mqtt_bridge_node.py" output="screen" respawn="true">
        <rosparam command="load" subst_value="true" file="$(arg mqtt_config_file)"/>
        <param name="mqtt_debug_option" value="$(arg debug_level)" type="string"/>
  </node>

  <!-- Topics configuration location -->
  <arg name="topic_config" default="$(find vrviz_ros)/config/default_system_config.yaml"/>
  <arg name="mesh_config"  default="$(find vrviz_ros)/config/turtlebot_mesh_config.yaml"/>

  <node pkg="vrviz_ros" name="config_publisher" type="publish_config.py" args="$(arg debug_level)" output="screen">
        <param name="topic_config"    value="$(arg topic_config)" type="string"/>
        <param name="mesh_config"     value="$(arg mesh_config)"  type="string"/>
  </node>

  <!-- open connection for external access -->
  <node pkg="mqtt_bridge" name="mosquitto_server" type="mosquitto_server.sh" output="screen" args="$(arg mqtt_bridge_port)"/>
  
  
</launch>